{"version":3,"file":"static/js/2161.08772212.chunk.js","mappings":"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","sources":["components/BidModal.jsx","ui/GradientBtn.jsx","ui/StyledModal.jsx"],"sourcesContent":["// styling\nimport styled from 'styled-components/macro';\n\n// components\nimport StyledModal from '@ui/StyledModal';\nimport GradientBtn from '@ui/GradientBtn';\nimport {NumericFormat} from 'react-number-format';\nimport {toast} from 'react-toastify';\n\n// hooks\nimport {useBidModalContext} from '@contexts/bidModalContext';\nimport {useState} from 'react';\nimport {useForm, Controller} from 'react-hook-form';\n\n// utils\nimport classNames from 'classnames';\n\nconst StyledBidModal = styled(StyledModal)`\n  .content {\n    max-width: 500px;\n\n    &_header {\n      text-align: center;\n    }\n\n    &_main {\n      margin: 30px 0;\n      gap: 10px;\n\n      .row {\n        flex-direction: column;\n      }\n    }\n  }\n\n  @media screen and (min-width: 414px) {\n    .content_main .row {\n      flex-direction: row;\n    }\n  }\n`;\n\nconst BidModal = () => {\n    const minBid = 3.08, fee = 0.10;\n    const {isBidModalOpen, closeBidModal} = useBidModalContext();\n    const [bid, setBid] = useState(0);\n    const {control, handleSubmit, formState: {errors}, reset} = useForm();\n\n    const handleClose = () => {\n        closeBidModal();\n        setBid(minBid);\n    }\n\n    const handleBid = () => {\n        toast.success('Bid placed successfully');\n        reset();\n        handleClose();\n    }\n\n    const getTotal = () => {\n        return bid !== 0 ? (+bid + fee).toFixed(2) : (minBid + fee).toFixed(2);\n    }\n\n    return (\n        <StyledBidModal open={isBidModalOpen} onClose={handleClose}>\n            <div className=\"content_header d-flex flex-column g-30\">\n                <div className=\"d-flex flex-column g-10\">\n                    <h4>Place a bid</h4>\n                    {/* <p>You purchase a product </p> */}\n                </div>\n                <form className=\"d-flex\">\n                    <Controller control={control}\n                                name=\"bid\"\n                                rules={{required: true, min: minBid}}\n                                defaultValue=\"\"\n                                render={({field}) => (\n                                    <NumericFormat\n                                        className={classNames('field field--outline flex-1', {'field--error': errors.bid})}\n                                        placeholder={`${minBid} ETH`}\n                                        thousandSeparator={true}\n                                        allowNegative={false}\n                                        suffix=\" ETH\"\n                                        name={field.name}\n                                        onValueChange={({value}) => {\n                                            setBid(+value);\n                                            field.onChange(+value);\n                                        }}\n                                    />\n                                )}/>\n                </form>\n            </div>\n            <div className=\"content_main d-flex flex-column\">\n                <p className=\"row d-flex justify-content-between\">\n                    You must bid at least: <span className=\"text-bold text-light\">{minBid.toFixed(2)} ETH</span>\n                </p>\n                <p className=\"row d-flex justify-content-between\">\n                    Total bid amount:\n                    <span className=\"text-bold text-light\">\n                            {getTotal()} ETH\n                        </span>\n                </p>\n            </div>\n            <div className=\"content_footer d-flex flex-column g-20\">\n                <GradientBtn tag=\"button\" onClick={handleSubmit(handleBid)}>Place a bid</GradientBtn>\n                <button className=\"btn btn--outline\" onClick={handleClose}>\n                    Cancel\n                </button>\n            </div>\n        </StyledBidModal>\n    )\n}\n\nexport default BidModal","// components\nimport {animated, useSpring} from '@react-spring/web';\nimport {NavLink} from 'react-router-dom';\n\n// hooks\nimport {useState} from 'react';\n\n// utils\nimport classNames from 'classnames';\n\nconst Wrapper = ({tag, href, ...props}) => {\n    if (tag === 'button') {\n        return <animated.button {...props}/>\n    }\n\n    if (href === undefined || href === '#') {\n        return <animated.a {...props}/>\n    }\n\n    const AnimatedNavLink = animated(NavLink);\n    return <AnimatedNavLink to={href} {...props}/>\n}\n\nconst GradientBtn = ({className, ...props}) => {\n    const [isHovered, setIsHovered] = useState(false);\n// 00eff5 FCB808\n    const variants = {\n        static: {background: 'linear-gradient(98.49deg, #00eff5 -11.31%, #008f13 76.26%)'},\n        active: {background: 'linear-gradient(98.49deg, #008f13 -11.31%, #00eff5 76.26%)'},\n    };\n\n    const {background} = useSpring({\n        background: isHovered ? variants.active.background : variants.static.background,\n        config: {duration: 300},\n        ...props,\n    });\n\n    return (\n        <Wrapper className={classNames('btn btn--gradient', className)} {...props}\n                         onMouseEnter={() => setIsHovered(true)}\n                         onMouseLeave={() => setIsHovered(false)}\n                         style={{background}}>\n            {props.children}\n        </Wrapper>\n    )\n}\n\nexport default GradientBtn","// styling\nimport styled from 'styled-components/macro';\n\n// components\nimport Modal from '@mui/material/Modal';\nimport Grow from '@mui/material/Grow';\n\n// hooks\nimport {useEffect} from 'react';\nimport useScrollLock from '@hooks/useScrollLock';\n\n// utils\nimport PropTypes from 'prop-types';\n\nconst ModalWrapper = styled(Modal)`\n  padding: 20px;\n  height: 100vh;\n  overflow-y: auto;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 100000 !important;\n\n  .MuiBackdrop-root {\n    background: rgba(1, 1, 1, .6);\n  }\n\n  .content {\n    padding: 30px 20px;\n    position: relative;\n    flex: 1;\n    max-width: 1000px;\n    overflow: visible;\n    \n    .search-form {\n      margin: 10px 0;\n    }\n\n    .icon-close {\n      position: absolute;\n      top: 10px;\n      right: 10px;\n      font-size: 20px;\n      color: var(--divider);\n      transition: all var(--transition);\n      cursor: pointer;\n\n      &:hover {\n        color: var(--text-light);\n      }\n    }\n  }\n\n  &.video-container .content {\n    iframe {\n      aspect-ratio: 16 / 9;\n    }\n\n    .icon-close {\n      top: -10px;\n      right: -10px;\n      background: var(--accent);\n      width: 25px;\n      height: 25px;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      border-radius: 50%;\n      font-size: 14px;\n      will-change: transform;\n\n      &:hover {\n        transform: scale(1.1);\n        color: var(--bg-primary);\n      }\n    }\n  }\n\n  @media screen and (min-width: 414px) {\n    .content {\n      padding: 40px 30px;\n\n      .icon {\n        top: 20px;\n        right: 20px;\n      }\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    .content {\n      padding: 50px 40px;\n    }\n  }\n`;\n\nconst StyledModal = ({children, ...props}) => {\n    const {lockScroll, unlockScroll} = useScrollLock();\n\n    useEffect(() => {\n        props.open ? lockScroll() : unlockScroll();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [props.open]);\n\n    return (\n        <ModalWrapper {...props} closeAfterTransition>\n            <Grow in={props.open} timeout={300}>\n                <div className=\"content bg-tertiary border-10\">\n                    <i className=\"icon icon-xmark icon-close\" onClick={props.onClose}/>\n                    {children}\n                </div>\n            </Grow>\n        </ModalWrapper>\n    );\n}\n\nStyledModal.propTypes = {\n    children: PropTypes.node.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default StyledModal"],"names":["StyledBidModal","styled","StyledModal","withConfig","componentId","BidModal","minBid","isBidModalOpen","closeBidModal","useBidModalContext","bid","setBid","useState","control","handleSubmit","formState","errors","reset","useForm","handleClose","_jsxs","open","onClose","children","className","_jsx","Controller","name","rules","required","min","defaultValue","render","_ref","field","NumericFormat","classNames","placeholder","thousandSeparator","allowNegative","suffix","onValueChange","_ref2","value","onChange","toFixed","GradientBtn","tag","onClick","handleBid","toast","success","Wrapper","href","props","animated","button","undefined","a","AnimatedNavLink","NavLink","to","isHovered","setIsHovered","variants","background","useSpring","config","duration","onMouseEnter","onMouseLeave","style","ModalWrapper","Modal","lockScroll","unlockScroll","useScrollLock","useEffect","closeAfterTransition","Grow","in","timeout"],"sourceRoot":""}